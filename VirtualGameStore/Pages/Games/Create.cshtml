@page
@model VirtualGameStore.Pages.Games.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create Game</h1>

<hr />

<div class="row">
    <div class="col-md-4">
        <form method="post">
            @if (ViewBag.StatusMessage != null)
            {
                <div class="alert alert-danger" role="alert">
                    @ViewBag.StatusMessage
                </div>
            }

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Game.Name" class="control-label"></label>
                <input asp-for="Game.Name" class="form-control" />
                <span asp-validation-for="Game.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Game.Description" class="control-label"></label>
                <textarea asp-for="Game.Description" class="form-control"></textarea>
                <span asp-validation-for="Game.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Game.Price" class="control-label"></label>
                <input asp-for="Game.Price" class="form-control" />
                <span asp-validation-for="Game.Price" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Game.IsDigital" onchange="document.getElementById('Game_Stock_Container').hidden = this.checked;"/> @Html.DisplayNameFor(model => model.Game.IsDigital)
                </label>
            </div>
            <div id="Game_Stock_Container" class="form-group" >
                <label asp-for="Game.Stock" class="control-label"></label>
                <input asp-for="Game.Stock" class="form-control" value="0"/>
                <span asp-validation-for="Game.Stock" class="text-danger"></span>
            </div>

            <hr />

            <h5 class="card-title">Supported Platforms</h5>
            @foreach (var platform in Model.Platforms)
            {
                <div class="form-check-inline">
                    <input name="Input.PlatformIds"
                       id="platform-@platform.Id"
                       type="checkbox"
                       value="@platform.Id"
                       checked="@Model.Input.PlatformIds.Contains(platform.Id)" />
                    <label for="platform-@platform.Id" class="form-label">@platform.Name</label>

                </div>
            }

            <hr />

            <h5 class="card-title">Related Categories</h5>
            @foreach (var category in Model.Categories)
            {
                <div class="form-check-inline">
                    <input name="Input.CategoryIds"
                       id="category-@category.Id"
                       type="checkbox"
                       value="@category.Id"
                       checked="@Model.Input.CategoryIds.Contains(category.Id)" />
                    <label for="category-@category.Id" class="form-label">@category.Name</label>

                </div>
            }

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Admin">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
