@page
@model VirtualGameStore.Pages.Reviews.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Review</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @if (ViewBag.StatusMessage != null)
        {
            <div class="alert alert-danger" role="alert">
                @ViewBag.StatusMessage
            </div>
        }

        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Review.Rating" class="control-label"></label>
                <input asp-for="Review.Rating"
                       class="rating"
                       max="5"
                       oninput="this.style.setProperty('--value', `${this.valueAsNumber}`)"
                       step="0.5"
                       style="--value:2.5"
                       type="range"
                       value="2.5">
                <span asp-validation-for="Review.Rating" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Review.Title" class="control-label"></label>
                <input asp-for="Review.Title" class="form-control" />
                <span asp-validation-for="Review.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Review.Comment" class="control-label"></label>
                <input asp-for="Review.Comment" class="form-control" />
                <span asp-validation-for="Review.Comment" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
